<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap>
	<update id="map_deleteRailingsInfo" parameterClass="java.util.Map">
		update tb_railings set use_flag = '0', update_id = #updateId#, update_date = now() 
		where id = #id#
	</update>
	
	<update id="map_deletesRailingsInfo" parameterClass="java.util.Map">
		update tb_railings set use_flag = '0', update_id = #updateId#, update_date = now() 
		where id in ($id$)
	</update>
	
	<select id="map_findAllRailingsInfo" resultClass="com.osource.module.map.model.RailingsInfo">
		select id, name, type, dept_id as deptId, use_flag as useFlag, 
		insert_date as insertDate, insert_id as insertId, update_id as updateId,
		update_date as updateDate from tb_railings where use_flag = '1' order by id
	</select>
	
	<select id="map_getRailingsInfoCount" resultClass="java.lang.Integer">
		select count(*) from tb_railings where use_flag = '1'
	</select>
	
	<select id="map_findAllRailingsInfoByDeptId" parameterClass="java.util.Map" 
			resultClass="com.osource.module.map.model.RailingsInfo">
		select r.id, r.name, r.type, r.dept_id as deptId, r.use_flag as useFlag, 
		r.insert_date as insertDate, r.insert_id as insertId, r.update_id as updateId,
		r.update_date as updateDate from tb_railings r, tb_dept d where d.use_flag = '1' 
		and r.use_flag = '1' and r.dept_id = d.id 
		<dynamic prepend="and">
			<isEmpty prepend="and" property="node">
				d.node like concat((select node from tb_dept where id = 0) , '%')
			</isEmpty>
			<isNotEmpty prepend="and" property="node">
				d.node like concat(#node# , '%')
			</isNotEmpty>
			<isNotEmpty prepend="and" property="name">
				r.name like concat('%' , #name# , '%')
			</isNotEmpty>
		</dynamic>
		order by r.insert_date desc, r.id
	</select>
	
	<select id="map_getRailingsInfoCountByDeptId" parameterClass="java.util.Map" 
			resultClass="java.lang.Integer">
		select count(*) from tb_railings r, tb_dept d where r.use_flag = '1' and d.use_flag = '1' 
		and r.dept_id = d.id 
		<dynamic prepend="and">
			<isEmpty prepend="and" property="node">
				d.node like concat((select node from tb_dept where id = 0) , '%')
			</isEmpty>
			<isNotEmpty prepend="and" property="node">
				d.node like concat(#node# , '%')
			</isNotEmpty>
			<isNotEmpty prepend="and" property="name">
				r.name like concat('%',#name#,'%')
			</isNotEmpty>
		</dynamic>
	</select>
	
	<select id="map_findAllRailingsInfoById" parameterClass="java.lang.Integer" 
			resultClass="com.osource.module.map.model.RailingsInfo">
		select id, name, type, dept_id as deptId, use_flag as useFlag, 
		insert_date as insertDate, insert_id as insertId, update_id as updateId,
		update_date as updateDate from tb_railings where use_flag = '1' and id = #value#
	</select>
	
	<insert id="map_saveRailingsInfo" parameterClass="com.osource.module.map.model.RailingsInfo">
		insert into tb_railings(id, name, type, dept_id, use_flag, insert_date, insert_id
		<dynamic prepend=",">
			<isNotEmpty prepend="," property="updateDate">
				update_date
			</isNotEmpty>
			<isGreaterThan prepend="," property="updateId" compareValue="0">
				update_id
			</isGreaterThan>
		</dynamic>
		) values(#id#, #name#, #type#, 0, '1', now(), #insertId#
		<dynamic prepend=",">
			<isNotEmpty prepend="," property="updateDate">
				#updateDate#
			</isNotEmpty>
			<isGreaterThan prepend="," property="updateId" compareValue="0">
				#updateId#
			</isGreaterThan>
		</dynamic>
		)
	</insert>
	
	<update id="map_updateRailingsInfo" parameterClass="com.osource.module.map.model.RailingsInfo">
		update tb_railings set name = #name#, type = #type#, dept_id = 0, use_flag = #useFlag#, 
		insert_date = #insertDate#, insert_id = #insertId#, update_date = now(), update_id = #updateId# 
		where id = #id#
	</update>
</sqlMap>
