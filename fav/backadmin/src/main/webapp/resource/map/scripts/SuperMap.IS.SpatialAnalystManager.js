//================================================================================ 
// SuperMap IS .NET 客户端程序，版权所有，北京超图软件股份有限公司，2000-2008。 
// 本程序只能在有效的授权许可下使用。未经许可，不得以任何手段擅自使用或传播。 
// 作 者:  SuperMap IS Web Team 
// 版 本:  $Id: SuperMap.IS.SpatialAnalystManager.js,v 1.40.2.4 2009/05/14 12:17:04 zhangyt Exp $
// 文 件:  SuperMap.IS.SpatialAnalystManager.js 
// 描 述:  AjaxScripts 空间分析功能 
// 更 新:  $Date: 2009/05/14 12:17:04 $ 
//================================================================================ 
SuperMap.IS.SpatialAnalystManager=function(mapHandler,mapName,trackingLayerIndex,userID){var queryUrl=mapHandler+"path.ashx";var onComplete=null;var onError=null;var _trackingLayerIndex=-1;var _userID="";var _eventsList=new Array();var _eventsNameList=new Array();if(trackingLayerIndex!=null){_trackingLayerIndex=trackingLayerIndex}if(userID!=null){_userID=userID}function _RegisterHandler(onSpatialAnalystComplete,onSpatialAnalystError){onComplete=onSpatialAnalystComplete;onError=onSpatialAnalystError}this.RegisterHandler=_RegisterHandler;function _FindPathBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var routeResultJ=_eval("("+responseText+")");var routeResult=new SuperMap.IS.RouteResult();routeResult.FromJSON(routeResultJ);_ChangeTrackingLayerKeyInternal(routeResult.trackingLayerIndex,routeResult.userID,true);if(onComplete){onComplete(routeResult,userContext)}if(routeResultJ&&routeResultJ.nodePositions){while(routeResultJ.nodePositions.length>0){routeResultJ.nodePositions.pop()}}routeResultJ=null;routeResult.Destroy();routeResult=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.FindPathByPoints=function(points,routeParam,onComplete,onError,userContext){if(points!=null){_FindPathBase("FindPathByPoints",["points","routeParam","trackingLayerIndex","userID"],[points,routeParam,_trackingLayerIndex,_userID],onComplete,onError,userContext)}};this.FindPathByIds=function(ids,routeParam,onComplete,onError,userContext){if(ids!=null){_FindPathBase("FindPathByIds",["ids","routeParam","trackingLayerIndex","userID"],[ids,routeParam,_trackingLayerIndex,_userID],onComplete,onError,userContext)}};function _DynamicPathBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var routeResultJ=_eval("("+responseText+")");var routeResult=new SuperMap.IS.RouteResult();routeResult.FromJSON(routeResultJ);_ChangeTrackingLayerKeyInternal(routeResult.trackingLayerIndex,routeResult.userID,true);if(onComplete){onComplete(routeResult,userContext)}if(routeResultJ&&routeResultJ.nodePositions){while(routeResultJ.nodePositions.length>0){routeResultJ.nodePositions.pop()}}routeResultJ=null;routeResult.Destroy();routeResult=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.DynamicPathByPoints=function(points,curTime,routeParam,timeSegments,timeSegmentInfo,onComplete,onError,userContext){if(points!=null){_DynamicPathBase("DynamicPathByPoints",["points","curTime","routeParam","timeSegments","timeSegmentInfos","trackingLayerIndex","userID"],[points,curTime,routeParam,timeSegments,timeSegmentInfos,_trackingLayerIndex,_userID],onComplete,onError,userContext)}};this.DynamicPathByIds=function(ids,curTime,routeParam,timeSegments,timeSegmentInfo,onComplete,onError,userContext){if(ids!=null){_DynamicPathBase("DynamicPathByIds",["ids","curTime","routeParam","timeSegments","timeSegmentInfos","trackingLayerIndex","userID"],[ids,curTime,routeParam,timeSegments,timeSegmentInfos,_trackingLayerIndex,_userID],onComplete,onError,userContext)}};function _SetTimeSegmentBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var result=_eval("("+responseText+")");if(onComplete){onComplete(result,userContext)}}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.SetTimeSegment=function(segmentValue,timeSegment,onComplete,onError,userContext){_SetTimeSegmentBase("SetTimeSegment",["segmentValue","timeSegment"],[segmentValue,timeSegment],onComplete,onError,userContext)};function _GetTimeSegmentBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var result=_eval("("+responseText+")");if(onComplete){onComplete(result,userContext)}}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.GetTimeSegment=function(segmentValue,onComplete,onError,userContext){_GetTimeSegmentBase("GetTimeSegment",["segmentValue"],[segmentValue],onComplete,onError,userContext)};function _RemoveTimeSegmentBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var result=_eval("("+responseText+")");if(onComplete){onComplete(result,userContext)}}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.RemoveTimeSegment=function(segmentValue,onComplete,onError,userContext){_RemoveTimeSegmentBase("RemoveTimeSegment",["segmentValue"],[segmentValue],onComplete,onError,userContext)};function _GetValidTimeSegmentIndexBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var result=_eval("("+responseText+")");if(onComplete){onComplete(result,userContext)}}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.GetValidTimeSegmentIndex=function(timeSegmentValue,lastUpdateTime,onComplete,onError,userContext){_GetValidTimeSegmentIndexBase("GetValidTimeSegmentIndex",["timeSegmentValue","lastUpdateTime"],[timeSegmentValue,lastUpdateTime],onComplete,onError,userContext)};function _UpdateTimeSegmentInfoBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var result=_eval("("+responseText+")");if(onComplete){onComplete(result,userContext)}}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.UpdateTimeSegmentInfoByEdge=function(edgeID,timeSegmentValue,edgeTimeSegmentIndex,timeSegmentCost,lastUpdateTime,onComplete,onError,userContext){_UpdateTimeSegmentInfoBase("UpdateTimeSegmentInfoByEdge",["edgeID","timeSegmentValue","edgeTimeSegmentIndex","timeSegmentCost","lastUpdateTime"],[edgeID,timeSegmentValue,edgeTimeSegmentIndex,timeSegmentCost,lastUpdateTime],onComplete,onError,userContext)};this.UpdateTimeSegmentInfoByTimeSegment=function(timeSegmentIndex,timeSegmentValue,edgeIDs,timeSegmentCost,lastUpdateTime,onComplete,onError,userContext){_UpdateTimeSegmentInfoBase("UpdateTimeSegmentInfoByTimeSegment",["timeSegmentIndex","timeSegmentValue","edgeIDs","timeSegmentCost","lastUpdateTime"],[timeSegmentIndex,timeSegmentValue,edgeIDs,timeSegmentCost,lastUpdateTime],onComplete,onError,userContext)};this.UpdateTimeSegmentInfo=function(timeSegmentInfo,onComplete,onError,userContext){_UpdateTimeSegmentInfoBase("UpdateTimeSegmentInfo",["timeSegmentInfo"],[timeSegmentInfo],onComplete,onError,userContext)};function _GetBusSolutionBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var busSolutionsJ=_eval("("+responseText+")");if(!busSolutionsJ){onComplete(null,userContext);return }var busSolutions=new Array();for(var i=0;i<busSolutionsJ.length;i++){busSolutions[i]=new SuperMap.IS.BusSolution();busSolutions[i].FromJSON(busSolutionsJ[i])}while(busSolutionsJ[i]&&busSolutionsJ[i].length>0){var busSolutionJ=busSolutionsJ.pop();if(busSolutionJ.routings){while(busSolutionJ.routings.length>0){var busRoutingJ=busSolutionJ.routings.pop();if(busRoutingJ.busLines){while(busRoutingJ.busLines.length>0){var busLineJ=busRoutingJ.busLines.pop();if(busLineJ&&busLineJ.points){while(busLineJ.points.length>0){busLineJ.points.pop()}}busLineJ=null}}if(busRoutingJ.upStops){while(busRoutingJ.upStops.length>0){var busStopJ=busRoutingJ.upStops.pop();if(busStopJ.Location){busStopJ.Location=null}busStopJ=null}}if(busRoutingJ.downStops){while(busRoutingJ.downStops.length>0){var busStopJ=busRoutingJ.downStops.pop();if(busStopJ.Location){busStopJ.Location=null}busStopJ=null}}busRoutingJ=null}}if(busSolutionJ.startStops){while(busSolutionJ.startStops.length>0){busSolutionJ.startStops.pop()}}if(busSolutionJ.endStops){while(busSolutionJ.endStops.length>0){busSolutionJ.endStops.pop()}}busSolutionJ=null}busSolutionsJ=null;if(onComplete){onComplete(busSolutions,userContext)}if(busSolutions){while(busSolutions.length>0){var busSolution=busSolutions.pop();busSolution.Destroy();busSolution=null}busSolutions=null}}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.GetBusSolutionByIds=function(ids,busSolutionParam,onComplete,onError,userContext){_GetBusSolutionBase("GetBusSolutionByIds",["ids","busSolutionParam"],[ids,busSolutionParam],onComplete,onError,userContext)};this.GetBusSolutionByNames=function(names,busSolutionParam,onComplete,onError,userContext){_GetBusSolutionBase("GetBusSolutionByNames",["names","busSolutionParam"],[names,busSolutionParam],onComplete,onError,userContext)};this.GetBusSolutionByPoints=function(points,tolerance,busSolutionParam,onComplete,onError,userContext){_GetBusSolutionBase("GetBusSolutionByPoints",["points","tolerance","busSolutionParam"],[points,tolerance,busSolutionParam],onComplete,onError,userContext)};function _FuzzyFindBusStopBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var busStopsJ=_eval("("+responseText+")");if(!busStopsJ){if(onComplete){onComplete(busStopsJ,userContext)}return }var busStops=new Array();for(var i=0;i<busStopsJ.length;i++){busStops[i]=new SuperMap.IS.BusStop();busStops[i].FromJSON(busStopsJ[i])}while(busStopsJ.length>0){var busStopJ=busStopsJ.pop();if(busStopJ.Location){busStopJ.Location=null}busStopJ=null}busStopsJ=null;if(onComplete){onComplete(busStops,userContext)}for(var i=0;i<busStops.length;i++){busStops.pop().Destroy()}busStops=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.FuzzyFindBusStop=function(fuzzyStopName,onComplete,onError,userContext){_FuzzyFindBusStopBase("FuzzyFindBusStop",["fuzzyStopName"],[fuzzyStopName],onComplete,onError,userContext)};function _FuzzyFindBusLineBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var busLinesJ=_eval("("+responseText+")");if(!busLinesJ){if(onComplete){onComplete(busLinesJ,userContext)}return }var busLines=new Array();for(var i=0;i<busLinesJ.length;i++){busLines[i]=new SuperMap.IS.BusLine();busLines[i].FromJSON(busLinesJ[i])}while(busLinesJ.length>0){var busLineJ=busLinesJ.pop();if(busLineJ&&busLineJ.points){while(busLineJ.points.length>0){busLineJ.points.pop()}}busLineJ=null}busLinesJ=null;if(onComplete){onComplete(busLines,userContext)}while(busLines.length>0){var busLine=busLines.pop();busLine.Destroy();busLine=null}busLines=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.FuzzyFindBusLine=function(fuzzyBusLineName,onComplete,onError,userContext){_FuzzyFindBusLineBase("FuzzyFindBusLine",["fuzzyBusLineName"],[fuzzyBusLineName],onComplete,onError,userContext)};function _GetBusLinesByStopBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var busLinesJ=_eval("("+responseText+")");if(!busLinesJ){if(onComplete){onComplete(busLinesJ,userContext)}return }var busLines=new Array();if(busLinesJ){for(var i=0;i<busLinesJ.length;i++){busLines[i]=new SuperMap.IS.BusLine();busLines[i].FromJSON(busLinesJ[i])}}while(busLinesJ.length>0){var busLineJ=busLinesJ.pop();if(busLineJ&&busLineJ.points){while(busLineJ.points.length>0){busLineJ.points.pop()}}busLineJ=null}busLinesJ=null;if(onComplete){onComplete(busLines,userContext)}for(var i=0;i<busLines.length;i++){busLines.pop().Destroy()}busLines=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.GetBusLinesByStopID=function(interchangeID,onComplete,onError,userContext){_GetBusLinesByStopBase("GetBusLinesByStopID",["interchangeID"],[interchangeID],onComplete,onError,userContext)};this.GetBusLinesByStopName=function(stopName,onComplete,onError,userContext){_GetBusLinesByStopBase("GetBusLinesByStopName",["stopName"],[stopName],onComplete,onError,userContext)};function _GetFollowingStopsBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var busStopsJ=_eval("("+responseText+")");if(!busStopsJ){if(onComplete){onComplete(busStopsJ,userContext)}return }var busStops=new Array();for(var i=0;i<busStopsJ.length;i++){busStops[i]=new SuperMap.IS.BusStop();busStops[i].FromJSON(busStopsJ[i])}while(busStopsJ.length>0){var busStopJ=busStopsJ.pop();if(busStopJ.Location){busStopJ.Location=null}busStopJ=null}if(onComplete){onComplete(busStops,userContext)}for(var i=0;i<busStops.length;i++){busStops.pop().Destroy()}busStops=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.GetFollowingStops=function(busLineID,bForward,onComplete,onError,userContext){_GetFollowingStopsBase("GetFollowingStops",["busLineID","bForward"],[busLineID,bForward],onComplete,onError,userContext)};function _BufferQueryBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultSetJ=_eval("("+responseText+")");var resultSet=new SuperMap.IS.ResultSet();resultSet.FromJSON(resultSetJ);_ChangeTrackingLayerKeyInternal(resultSet.trackingLayerIndex,resultSet.userID,true);if(onComplete){onComplete(resultSet,userContext);resultSet.Destroy();resultSet=null}}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.BufferQuery=function(bufferParam,queryParam,onComplete,onError,userContext){_BufferQueryBase("BufferQuery",["bufferParam","queryParam","trackingLayerIndex","userID"],[bufferParam,queryParam,_trackingLayerIndex,_userID],onComplete,onError,userContext)};function _ClosestFacilityBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){var proximityResultJ=_eval("("+responseText+")");if(proximityResultJ==null){onComplete(null,userContext);return }var proximityResult=new SuperMap.IS.ProximityResult();proximityResult.FromJSON(proximityResultJ);_ChangeTrackingLayerKeyInternal(proximityResult.trackingLayerIndex,proximityResult.userID,true);if(onComplete){onComplete(proximityResult,userContext);proximityResult.Destroy();proximityResult=null}}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.ClosestFacility=function(point,proximityParam,onComplete,onError,userContext){_ClosestFacilityBase("ClosestFacility",["point","proximityParam","trackingLayerIndex","userID"],[point,proximityParam,_trackingLayerIndex,_userID],onComplete,onError,userContext)};function _ShowBusBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var mapParam=_eval("("+responseText+")");_ChangeTrackingLayerKeyInternal(mapParam.trackingLayerIndex,_userID,false);_TriggerEvent("onviewboundschanged",mapParam.viewBounds);if(onComplete){onComplete(mapParam.viewBounds,userContext)}}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.ShowBusStop=function(id,style,onComplete,onError,userContext){_ShowBusBase("AddBusStopToTrackingLayer",["id","style","trackingLayerIndex","userID"],[id,style,_trackingLayerIndex,_userID],onComplete,onError,userContext)};this.ShowBusLine=function(id,style,onComplete,onError,userContext){_ShowBusBase("AddBusLineToTrackingLayer",["id","style","trackingLayerIndex","userID"],[id,style,_trackingLayerIndex,_userID],onComplete,onError,userContext)};this.ShowRouting=function(busRouting,stopStyle,lineStyle,onComplete,onError,userContext){_ShowBusBase("AddRoutingToTrackingLayer",["busRouting","stopStyle","lineStyle","trackingLayerIndex","userID"],[busRouting,stopStyle,lineStyle,_trackingLayerIndex,_userID],onComplete,onError,userContext)};function _UpdateBusLinePriorityBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var success=_eval("("+responseText+")");if(onComplete){onComplete(success,userContext)}}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.UpdateBusLinePriority=function(busLineSmID,priority,onComplete,onError,userContext){_UpdateBusLinePriorityBase("UpdateBusLinePriority",["busLineSmID","priority"],[busLineSmID,priority],onComplete,onError,userContext)};this.UpdateBusLinesPriority=function(busLineSmIDs,priority,onComplete,onError,userContext){_UpdateBusLinePriorityBase("UpdateBusLinesPriority",["busLineSmIDs","priority"],[busLineSmIDs,priority],onComplete,onError,userContext)};function _OverlayAnalystBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var overlayResultJ=_eval("("+responseText+")");if(!overlayResultJ){onComplete(null,userContext);return }var overlayResult=new SuperMap.IS.OverlayResult();overlayResult.FromJSON(overlayResultJ);if(onComplete){onComplete(overlayResult,userContext)}overlayResult.Destroy();overlayResult=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.OverlayAnalyst=function(overlayParam,onComplete,onError,userContext){_OverlayAnalystBase("OverlayAnalyst",["overlayParam"],[overlayParam],onComplete,onError,userContext)};function _InterpolateBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.InterpolateResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.Interpolate=function(interpolateParam,onComplete,onError,userContext){_InterpolateBase("Interpolate",["interpolateParam"],[interpolateParam],onComplete,onError,userContext)};function _GeneralizeBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.GeneralizeResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.Aggregate=function(aggregateParam,onComplete,onError,userContext){_GeneralizeBase("Aggregate",["aggregateParam"],[aggregateParam],onComplete,onError,userContext)};this.Reclass=function(reclassParam,onComplete,onError,userContext){_GeneralizeBase("Reclass",["reclassParam"],[reclassParam],onComplete,onError,userContext)};this.Replace=function(replaceParam,onComplete,onError,userContext){_GeneralizeBase("Replace",["replaceParam"],[replaceParam],onComplete,onError,userContext)};this.Resample=function(resampleParam,onComplete,onError,userContext){_GeneralizeBase("Resample",["resampleParam"],[resampleParam],onComplete,onError,userContext)};function _IsoLineBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.IsoLineResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.IsoLineByGridDataset=function(gridDataset,isoLineParam,onComplete,onError,userContext){_IsoLineBase("IsoLineByGridDataset",["gridDataset","isoLineParam"],[gridDataset,isoLineParam],onComplete,onError,userContext)};this.IsoLineByPointDataset=function(pointDataset,pointValueField,interpolateType,gridResolution,isoLineParam,onComplete,onError,userContext){_IsoLineBase("IsoLineByPointDataset",["pointDataset","pointValueField","interpolateType","gridResolution","isoLineParam"],[pointDataset,pointValueField,interpolateType,gridResolution,isoLineParam],onComplete,onError,userContext)};this.IsoLineByPointPositions=function(pointPositions,pointValues,interpolateType,gridResolution,isoLineParam,onComplete,onError,userContext){_IsoLineBase("IsoLineByPointPositions",["pointPositions","pointValues","interpolateType","gridResolution","isoLineParam"],[pointPositions,pointValues,interpolateType,gridResolution,isoLineParam],onComplete,onError,userContext)};function _GridClipBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.GridClipResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.GridClip=function(gridClipParam,onComplete,onError,userContext){_GridClipBase("GridClip",["gridClipParam"],[gridClipParam],onComplete,onError,userContext)};function _IsoRegionBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.IsoRegionResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.IsoRegion=function(isoRegionParam,onComplete,onError,userContext){_IsoRegionBase("IsoRegion",["isoRegionParam"],[isoRegionParam],onComplete,onError,userContext)};function _GridValueOperateBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var result=_eval("("+responseText+")");if(onComplete){onComplete(result,userContext)}}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.GetGridValue=function(layerName,position,onComplete,onError,userContext){_GridValueOperateBase("GetGridValue",["layerName","position"],[layerName,position],onComplete,onError,userContext)};this.GetGridPixelValue=function(layerName,position,onComplete,onError,userContext){_GridValueOperateBase("GetGridPixelValue",["layerName","position"],[layerName,position],onComplete,onError,userContext)};this.SetGridValue=function(layerName,position,value,onComplete,onError,userContext){_GridValueOperateBase("SetGridValue",["layerName","position","value"],[layerName,position,value],onComplete,onError,userContext)};this.SetGridPixelValue=function(layerName,position,value,onComplete,onError,userContext){_GridValueOperateBase("SetGridPixelValue",["layerName","position","value"],[layerName,position,value],onComplete,onError,userContext)};function _FloodBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.FloodResult();result.FromJSON(resultJ);_ChangeTrackingLayerKeyInternal(result.trackingLayerIndex,result.userID,true);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.Flood=function(floodParam,onComplete,onError,userContext){_FloodBase("Flood",["floodParam","trackingLayerIndex","userID"],[floodParam,_trackingLayerIndex,_userID],onComplete,onError,userContext)};function _CutFillBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.CutFillResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.CutFill=function(cutFillParam,onComplete,onError,userContext){_CutFillBase("CutFill",["cutFillParam"],[cutFillParam],onComplete,onError,userContext)};function _CalculateViewShedBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.CalculateViewShedResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.CalculateViewShed=function(calculateViewShedParam,onComplete,onError,userContext){_CalculateViewShedBase("CalculateViewShed",["calculateViewShedParam"],[calculateViewShedParam],onComplete,onError,userContext)};function _AspectBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.AspectResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.Aspect=function(aspectParam,onComplete,onError,userContext){_AspectBase("Aspect",["aspectParam"],[aspectParam],onComplete,onError,userContext)};function _SlopeBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.SlopeResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.Slope=function(slopeParam,onComplete,onError,userContext){_SlopeBase("Slope",["slopeParam"],[slopeParam],onComplete,onError,userContext)};function _SurfaceAreaBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.SurfaceAreaResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.SurfaceArea=function(surfaceAreaParam,onComplete,onError,userContext){_SurfaceAreaBase("SurfaceArea",["surfaceAreaParam"],[surfaceAreaParam],onComplete,onError,userContext)};function _SurfaceLengthBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.SurfaceLengthResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.SurfaceLength=function(surfaceLengthParam,onComplete,onError,userContext){_SurfaceLengthBase("SurfaceLength",["surfaceLengthParam"],[surfaceLengthParam],onComplete,onError,userContext)};function _GridCompareBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.GridCompareResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.GridCompare=function(gridCompareParam,onComplete,onError,userContext){_GridCompareBase("GridCompare",["gridCompareParam"],[gridCompareParam],onComplete,onError,userContext)};function _NeighbourStatisticsBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.NeighbourStatisticsResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.NeighbourStatistics=function(neighbourStatisticsParam,onComplete,onError,userContext){_NeighbourStatisticsBase("NeighbourStatistics",["neighbourStatisticsParam"],[neighbourStatisticsParam],onComplete,onError,userContext)};function _OverlayStatisticsBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.OverlayStatisticsResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.OverlayStatistics=function(overlayStatisticsParam,onComplete,onError,userContext){_OverlayStatisticsBase("OverlayStatistics",["overlayStatisticsParam"],[overlayStatisticsParam],onComplete,onError,userContext)};function _GridExecuteBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.GridExecuteResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.GridExecute=function(gridExecuteParam,onComplete,onError,userContext){_GridExecuteBase("GridExecute",["gridExecuteParam"],[gridExecuteParam],onComplete,onError,userContext)};function _IsVisibleBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.IsVisibleResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.IsVisible=function(isVisibleParam,onComplete,onError,userContext){_IsVisibleBase("IsVisible",["isVisibleParam"],[isVisibleParam],onComplete,onError,userContext)};function _SurfaceProfileBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.SurfaceProfileResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.SurfaceProfile=function(surfaceProfileParam,onComplete,onError,userContext){_SurfaceProfileBase("SurfaceProfile",["surfaceProfileParam"],[surfaceProfileParam],onComplete,onError,userContext)};function _BasinBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.BasinResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.Basin=function(basinParam,onComplete,onError,userContext){_BasinBase("Basin",["basinParam"],[basinParam],onComplete,onError,userContext)};function _WaterShedBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.WaterShedResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.WaterShed=function(waterShedParam,onComplete,onError,userContext){_WaterShedBase("WaterShed",["waterShedParam"],[waterShedParam],onComplete,onError,userContext)};function _FillSinkBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.FillSinkResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.FillSink=function(fillSinkParam,onComplete,onError,userContext){_FillSinkBase("FillSink",["fillSinkParam"],[fillSinkParam],onComplete,onError,userContext)};function _FlowDirectionBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.FlowDirectionResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.FlowDirection=function(flowDirectionParam,onComplete,onError,userContext){_FlowDirectionBase("FlowDirection",["flowDirectionParam"],[flowDirectionParam],onComplete,onError,userContext)};function _FlowAccumulationBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.FlowAccumulationResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.FlowAccumulation=function(flowAccumulationParam,onComplete,onError,userContext){_FlowAccumulationBase("FlowAccumulation",["flowAccumulationParam"],[flowAccumulationParam],onComplete,onError,userContext)};function _RasterToVectorBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var resultJ=_eval("("+responseText+")");if(!resultJ){onComplete(null,userContext);return }var result=new SuperMap.IS.RasterToVectorResult();result.FromJSON(resultJ);if(onComplete){onComplete(result,userContext)}result.Destroy();result=null}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.RasterToVector=function(rasterToVectorParam,onComplete,onError,userContext){_RasterToVectorBase("RasterToVector",["rasterToVectorParam"],[rasterToVectorParam],onComplete,onError,userContext)};function _ServiceAreaBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var result=_eval("("+responseText+")");if(onComplete){onComplete(result,userContext)}}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.ServiceAreaByPoints=function(centerPoints,serviceRanges,isFromSite,notOverlap,resultRouteName,serviceAreaName,networkParams,onComplete,onError,userContext){_ServiceAreaBase("ServiceAreaByPoints",["centerPoints","serviceRanges","isFromSite","notOverlap","resultRouteName","serviceAreaName","networkParams"],[centerPoints,serviceRanges,isFromSite,notOverlap,resultRouteName,serviceAreaName,networkParams],onComplete,onError,userContext)};this.ServiceAreaByIds=function(centerIds,serviceRanges,isFromSite,notOverlap,resultRouteName,serviceAreaName,networkParams,onComplete,onError,userContext){_ServiceAreaBase("ServiceAreaByIds",["centerIds","serviceRanges","isFromSite","notOverlap","resultRouteName","serviceAreaName","networkParams"],[centerIds,serviceRanges,isFromSite,notOverlap,resultRouteName,serviceAreaName,networkParams],onComplete,onError,userContext)};function _CoordTransformateBase(methodName,paramNames,paramValues,onComplete,onError,userContext){function onRequestComplete(responseText){if(!responseText){if(onComplete){onComplete(null,userContext)}return }var result=_eval("("+responseText+")");if(onComplete){onComplete(result,userContext)}}var reuqestManager=new SuperMap.IS.RequestManager(queryUrl,onRequestComplete,onError,userContext);reuqestManager.AddQueryString("map",mapName);reuqestManager.AddQueryString("method",methodName);reuqestManager.AddQueryStrings(paramNames,paramValues);reuqestManager.Send();reuqestManager.Destroy();reuqestManager=null;while(paramNames.length>0){paramNames.pop();paramValues.pop()}paramNames=null;paramValues=null}this.CoordTransformate=function(coords,sourceCoordSys,targetCoordSys,onComplete,onError,userContext){_CoordTransformateBase("CoordTransformate",["coords","sourceCoordSys","targetCoordSys"],[coords,sourceCoordSys,targetCoordSys],onComplete,onError,userContext)};function _ChangeTrackingLayerKey(trackingLayerIndex,userID){_trackingLayerIndex=trackingLayerIndex;_userID=userID}function _ChangeTrackingLayerKeyInternal(trackingLayerIndex,userID,bSaveHistory){if(_trackingLayerIndex!=trackingLayerIndex||_userID!=userID){_trackingLayerIndex=trackingLayerIndex;_userID=userID;var param=new Object();param.trackingLayerIndex=_trackingLayerIndex;param.userID=_userID;param.bSaveHistory=bSaveHistory;_TriggerEvent("onchangetrackinglayer",param)}}function _AttachEvent(event,listener){var events=_eventsList[event];if(!events){events=new Array();_eventsList[event]=events;_eventsNameList.push(event)}for(var i=0;i<events.length;i++){if(events[i]==listener){return true}}events.push(listener)}function _DetachEvent(event,listener){var events=_eventsList[event];if(!events){return }for(var i=0;i<events.length;i++){if(events[i]==listener){events.splice(i,1)}}}function _TriggerEvent(event,arguments,userContext){var events=_eventsList[event];if(!events){return }if(!arguments){arguments=_GenerateEventArg()}var eventsTemp=events.concat();for(var i=0;i<eventsTemp.length;i++){if(eventsTemp[i]){eventsTemp[i](arguments,userContext)}}while(eventsTemp.length>0){eventsTemp.pop()}}function _GenerateEventArg(error,e){var param=new Object();param.trackingLayerIndex=_trackingLayerIndex;param.userID=_userID;if(!error){error=""}return new EventArguments(param,error,e)}this.AttachEvent=_AttachEvent;this.DetachEvent=_DetachEvent;this.ChangeTrackingLayerKey=_ChangeTrackingLayerKey}
